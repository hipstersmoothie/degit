{"version":3,"file":"index.js","sources":["src/utils.js","src/index.js"],"sourcesContent":["import fs from 'fs';\nimport path from 'path';\nimport https from 'https';\nimport child_process from 'child_process';\nimport { rimrafSync, copydirSync } from 'sander';\n\nconst tmpDirName = 'tmp';\nconst degitConfigName = 'degit.json';\n\nexport { degitConfigName };\n\nexport class DegitError extends Error {\n\tconstructor(message, opts) {\n\t\tsuper(message);\n\t\tObject.assign(this, opts);\n\t}\n}\n\nexport function tryRequire(file, opts) {\n\ttry {\n\t\tif (opts && opts.clearCache === true) {\n\t\t\tdelete require.cache[require.resolve(file)];\n\t\t}\n\t\treturn require(file);\n\t} catch (err) {\n\t\treturn null;\n\t}\n}\n\nexport function exec(command) {\n\treturn new Promise((fulfil, reject) => {\n\t\tchild_process.exec(command, (err, stdout, stderr) => {\n\t\t\tif (err) {\n\t\t\t\treject(err);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tfulfil({ stdout, stderr });\n\t\t});\n\t});\n}\n\nexport function mkdirp(dir) {\n\tconst parent = path.dirname(dir);\n\tif (parent === dir) return;\n\n\tmkdirp(parent);\n\n\ttry {\n\t\tfs.mkdirSync(dir);\n\t} catch (err) {\n\t\tif (err.code !== 'EEXIST') throw err;\n\t}\n}\n\nexport function stashFiles(dir, dest) {\n\tconst tmpDir = path.join(dir, tmpDirName);\n\trimrafSync(tmpDir);\n\tmkdirp(tmpDir);\n\tfs.readdirSync(dest).forEach(file => {\n\t\tconst filePath = path.join(dest, file);\n\t\tconst targetPath = path.join(tmpDir, file);\n\t\tconst isDir = fs.lstatSync(filePath).isDirectory();\n\t\tif (isDir) {\n\t\t\tcopydirSync(filePath).to(targetPath);\n\t\t\trimrafSync(filePath);\n\t\t} else {\n\t\t\tfs.copyFileSync(filePath, targetPath);\n\t\t\tfs.unlinkSync(filePath);\n\t\t}\n\t});\n}\n\nexport function unstashFiles(dir, dest) {\n\tconst tmpDir = path.join(dir, tmpDirName);\n\tfs.readdirSync(tmpDir).forEach(filename => {\n\t\tconst tmpFile = path.join(tmpDir, filename);\n\t\tconst targetPath = path.join(dest, filename);\n\t\tconst isDir = fs.lstatSync(tmpFile).isDirectory();\n\t\tif (isDir) {\n\t\t\tcopydirSync(tmpFile).to(targetPath);\n\t\t\trimrafSync(tmpFile);\n\t\t} else {\n\t\t\tif (filename !== 'degit.json') {\n\t\t\t\tfs.copyFileSync(tmpFile, targetPath);\n\t\t\t}\n\t\t\tfs.unlinkSync(tmpFile);\n\t\t}\n\t});\n\trimrafSync(tmpDir);\n}\n","import fs from 'fs';\nimport path from 'path';\nimport homeOrTmp from 'home-or-tmp';\nimport EventEmitter from 'events';\nimport gu from 'githuburl';\nimport chalk from 'chalk';\nimport { rimrafSync, copydirSync } from 'sander';\nimport {\n\tDegitError,\n\texec,\n\tmkdirp,\n\ttryRequire,\n\tstashFiles,\n\tunstashFiles,\n\tdegitConfigName,\n} from './utils';\n\nconst base = path.join(homeOrTmp, '.degit');\n\nexport default function degit(src, opts) {\n\treturn new Degit(src, opts);\n}\n\nclass Degit extends EventEmitter {\n\tconstructor(src, opts = {}) {\n\t\tsuper();\n\n\t\tthis.src = src;\n\t\tthis.cache = opts.cache;\n\t\tthis.force = opts.force;\n\t\tthis.verbose = opts.verbose;\n\n\t\tthis.repo = parse(src);\n\n\t\tthis._hasStashed = false;\n\n\t\tthis.directiveActions = {\n\t\t\tclone: async (dir, dest, action) => {\n\t\t\t\tif (this._hasStashed === false) {\n\t\t\t\t\tstashFiles(dir, dest);\n\t\t\t\t\tthis._hasStashed = true;\n\t\t\t\t}\n\t\t\t\tconst opts = Object.assign(\n\t\t\t\t\t{ force: true },\n\t\t\t\t\t{ cache: action.cache, verbose: action.verbose }\n\t\t\t\t);\n\t\t\t\tconst d = degit(action.src, opts);\n\n\t\t\t\td.on('info', event => {\n\t\t\t\t\tconsole.error(\n\t\t\t\t\t\tchalk.cyan(`> ${event.message.replace('options.', '--')}`)\n\t\t\t\t\t);\n\t\t\t\t});\n\n\t\t\t\td.on('warn', event => {\n\t\t\t\t\tconsole.error(\n\t\t\t\t\t\tchalk.magenta(`! ${event.message.replace('options.', '--')}`)\n\t\t\t\t\t);\n\t\t\t\t});\n\n\t\t\t\tawait d.clone(dest).catch(err => {\n\t\t\t\t\tconsole.error(chalk.red(`! ${err.message}`));\n\t\t\t\t\tprocess.exit(1);\n\t\t\t\t});\n\t\t\t},\n\t\t\tremove: this.remove.bind(this),\n\t\t};\n\t}\n\n\t_getDirectives(dest) {\n\t\tconst directivesPath = path.resolve(dest, degitConfigName);\n\t\tconst directives =\n\t\t\ttryRequire(directivesPath, { clearCache: true }) || false;\n\t\tif (directives) {\n\t\t\tfs.unlinkSync(directivesPath);\n\t\t}\n\n\t\treturn directives;\n\t}\n\n\tasync clone(dest) {\n\t\tthis._checkDirIsEmpty(dest);\n\n\t\tconst repo = this.repo;\n\n\t\tconst dir = path.join(base, repo.site, repo.user, repo.name);\n\t\tconst cached = tryRequire(path.join(dir, 'map.json')) || {};\n\n\t\tconst hash =\n\t\t\t(this.cache\n\t\t\t\t? this._getHashFromCache(repo, cached)\n\t\t\t\t: await this._getHash(repo, cached)) || repo.ref;\n\n\t\tif (!hash) {\n\t\t\t// TODO 'did you mean...?'\n\t\t\tthrow new DegitError(`could not find commit hash for ${repo.ref}`, {\n\t\t\t\tcode: 'MISSING_REF',\n\t\t\t\tref: repo.ref,\n\t\t\t});\n\t\t}\n\n\t\tconst file = `${dir}/${hash}/`;\n\n\t\ttry {\n\t\t\tif (!this.cache) {\n\t\t\t\ttry {\n\t\t\t\t\tfs.statSync(file);\n\t\t\t\t\tthis._verbose({\n\t\t\t\t\t\tcode: 'FILE_EXISTS',\n\t\t\t\t\t\tmessage: `${file} already exists locally`,\n\t\t\t\t\t});\n\t\t\t\t} catch (err) {\n\t\t\t\t\tmkdirp(path.dirname(file));\n\t\t\t\t\tthis._verbose({\n\t\t\t\t\t\tcode: 'DOWNLOADING',\n\t\t\t\t\t\tmessage: `downloading ${repo.url} to ${file}`,\n\t\t\t\t\t});\n\t\t\t\t\tconst urls = gu(repo.url);\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tawait exec(`git clone --depth 1 ${urls.https_clone_url} ${file}`);\n\t\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\t\tawait exec(`git clone --depth 1 ${urls.ssh_clone_url} ${file}`);\n\t\t\t\t\t\t}\n\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\tconsole.log(`Could not clone repo with HTTPS or SSH: ${repo.url}`);\n\t\t\t\t\t}\n\n\t\t\t\t\tawait exec(\n\t\t\t\t\t\t`cd ${file} && git fetch origin ${hash} && git checkout ${hash}`\n\t\t\t\t\t);\n\t\t\t\t\trimrafSync(`${file}/.git`);\n\t\t\t\t}\n\t\t\t}\n\t\t} catch (err) {\n\t\t\tthrow new DegitError(`could not download ${repo.url}`, {\n\t\t\t\tcode: 'COULD_NOT_DOWNLOAD',\n\t\t\t\trepo,\n\t\t\t\toriginal: err,\n\t\t\t});\n\t\t}\n\n\t\tupdateCache(dir, repo, hash, cached);\n\n\t\tthis._verbose({\n\t\t\tcode: 'EXTRACTING',\n\t\t\tmessage: `extracting ${file} to ${dest}`,\n\t\t});\n\n\t\tmkdirp(dest);\n\t\tcopydirSync(file).to(dest);\n\n\t\tthis._info({\n\t\t\tcode: 'SUCCESS',\n\t\t\tmessage: `cloned ${chalk.bold(repo.user + '/' + repo.name)}#${chalk.bold(\n\t\t\t\trepo.ref\n\t\t\t)}${dest !== '.' ? ` to ${dest}` : ''}`,\n\t\t\trepo,\n\t\t\tdest,\n\t\t});\n\n\t\tconst directives = this._getDirectives(dest);\n\t\tif (directives) {\n\t\t\tfor (const d of directives) {\n\t\t\t\t// TODO, can this be a loop with an index to pass for better error messages?\n\t\t\t\tawait this.directiveActions[d.action](dir, dest, d);\n\t\t\t}\n\t\t\tif (this._hasStashed === true) {\n\t\t\t\tunstashFiles(dir, dest);\n\t\t\t}\n\t\t}\n\t}\n\n\tremove(dir, dest, action) {\n\t\tlet files = action.files;\n\t\tif (!Array.isArray(files)) {\n\t\t\tfiles = [files];\n\t\t}\n\t\tconst removedFiles = files\n\t\t\t.map(file => {\n\t\t\t\tconst filePath = path.resolve(dest, file);\n\t\t\t\tif (fs.existsSync(filePath)) {\n\t\t\t\t\tconst isDir = fs.lstatSync(filePath).isDirectory();\n\t\t\t\t\tif (isDir) {\n\t\t\t\t\t\trimrafSync(filePath);\n\t\t\t\t\t\treturn file + '/';\n\t\t\t\t\t} else {\n\t\t\t\t\t\tfs.unlinkSync(filePath);\n\t\t\t\t\t\treturn file;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tthis._warn({\n\t\t\t\t\t\tcode: 'FILE_DOES_NOT_EXIST',\n\t\t\t\t\t\tmessage: `action wants to remove ${chalk.bold(\n\t\t\t\t\t\t\tfile\n\t\t\t\t\t\t)} but it does not exist`,\n\t\t\t\t\t});\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t})\n\t\t\t.filter(d => d);\n\n\t\tif (removedFiles.length > 0) {\n\t\t\tthis._info({\n\t\t\t\tcode: 'REMOVED',\n\t\t\t\tmessage: `removed: ${chalk.bold(\n\t\t\t\t\tremovedFiles.map(d => chalk.bold(d)).join(', ')\n\t\t\t\t)}`,\n\t\t\t});\n\t\t}\n\t}\n\n\t_checkDirIsEmpty(dir) {\n\t\ttry {\n\t\t\tconst files = fs.readdirSync(dir);\n\t\t\tif (files.length > 0) {\n\t\t\t\tif (this.force) {\n\t\t\t\t\tthis._info({\n\t\t\t\t\t\tcode: 'DEST_NOT_EMPTY',\n\t\t\t\t\t\tmessage: `destination directory is not empty. Using options.force, continuing`,\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\tthrow new DegitError(\n\t\t\t\t\t\t`destination directory is not empty, aborting. Use options.force to override`,\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tcode: 'DEST_NOT_EMPTY',\n\t\t\t\t\t\t}\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tthis._verbose({\n\t\t\t\t\tcode: 'DEST_IS_EMPTY',\n\t\t\t\t\tmessage: `destination directory is empty`,\n\t\t\t\t});\n\t\t\t}\n\t\t} catch (err) {\n\t\t\tif (err.code !== 'ENOENT') throw err;\n\t\t}\n\t}\n\n\t_info(info) {\n\t\tthis.emit('info', info);\n\t}\n\n\t_warn(info) {\n\t\tthis.emit('warn', info);\n\t}\n\n\t_verbose(info) {\n\t\tif (this.verbose) this._info(info);\n\t}\n\n\tasync _getHash(repo, cached) {\n\t\ttry {\n\t\t\tconst refs = await fetchRefs(repo);\n\t\t\treturn this._selectRef(refs, repo.ref);\n\t\t} catch (err) {\n\t\t\treturn this._getHashFromCache(repo, cached);\n\t\t}\n\t}\n\n\t_getHashFromCache(repo, cached) {\n\t\tif (repo.ref in cached) {\n\t\t\tconst hash = cached[repo.ref];\n\t\t\tthis._info({\n\t\t\t\tcode: 'USING_CACHE',\n\t\t\t\tmessage: `using cached commit hash ${hash}`,\n\t\t\t});\n\t\t\treturn hash;\n\t\t}\n\t}\n\n\t_selectRef(refs, selector) {\n\t\tfor (const ref of refs) {\n\t\t\tif (ref.name === selector) {\n\t\t\t\tthis._verbose({\n\t\t\t\t\tcode: 'FOUND_MATCH',\n\t\t\t\t\tmessage: `found matching commit hash: ${ref.hash}`,\n\t\t\t\t});\n\t\t\t\treturn ref.hash;\n\t\t\t}\n\t\t}\n\n\t\tif (selector.length < 8) return null;\n\n\t\tfor (const ref of refs) {\n\t\t\tif (ref.hash.startsWith(selector)) return ref.hash;\n\t\t}\n\t}\n}\n\nconst supported = new Set(['github', 'gitlab', 'bitbucket']);\n\nfunction parse(src) {\n\tconst match = /^(?:https:\\/\\/([^/]+)\\/|git@([^/]+):|([^/]+):)?([^/\\s]+)\\/([^/\\s#]+)(?:#(.+))?/.exec(\n\t\tsrc\n\t);\n\tif (!match) {\n\t\tthrow new DegitError(`could not parse ${src}`, {\n\t\t\tcode: 'BAD_SRC',\n\t\t});\n\t}\n\n\tconst site = (match[1] || match[2] || match[3] || 'github').replace(\n\t\t/\\.(com|org)$/,\n\t\t''\n\t);\n\tif (!supported.has(site) && !site.includes('github')) {\n\t\tthrow new DegitError(`degit supports GitHub, GitLab and BitBucket`, {\n\t\t\tcode: 'UNSUPPORTED_HOST',\n\t\t});\n\t}\n\n\tconst user = match[4];\n\tconst name = match[5].replace(/\\.git$/, '');\n\tconst ref = match[6] || 'master';\n\n\tconst url = `https://${site}.${\n\t\tsite === 'bitbucket' ? 'org' : 'com'\n\t}/${user}/${name}`;\n\n\treturn { site, user, name, ref, url };\n}\n\nasync function fetchRefs(repo) {\n\tconst { stdout } = await exec(`git ls-remote ${repo.url}`);\n\n\treturn stdout\n\t\t.split('\\n')\n\t\t.filter(Boolean)\n\t\t.map(row => {\n\t\t\tconst [hash, ref] = row.split('\\t');\n\n\t\t\tif (ref === 'HEAD') {\n\t\t\t\treturn {\n\t\t\t\t\ttype: 'HEAD',\n\t\t\t\t\thash,\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tconst match = /refs\\/(\\w+)\\/(.+)/.exec(ref);\n\t\t\tif (!match)\n\t\t\t\tthrow new DegitError(`could not parse ${ref}`, {\n\t\t\t\t\tcode: 'BAD_REF',\n\t\t\t\t});\n\n\t\t\treturn {\n\t\t\t\ttype:\n\t\t\t\t\tmatch[1] === 'heads'\n\t\t\t\t\t\t? 'branch'\n\t\t\t\t\t\t: match[1] === 'refs'\n\t\t\t\t\t\t? 'ref'\n\t\t\t\t\t\t: match[1],\n\t\t\t\tname: match[2],\n\t\t\t\thash,\n\t\t\t};\n\t\t});\n}\n\nfunction updateCache(dir, repo, hash, cached) {\n\tif (cached[repo.ref] === hash) return;\n\n\tconst oldHash = cached[repo.ref];\n\tif (oldHash) {\n\t\tlet used = false;\n\t\tfor (const key in cached) {\n\t\t\tif (cached[key] === hash) {\n\t\t\t\tused = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tif (!used) {\n\t\t\t// we no longer need this tar file\n\t\t\ttry {\n\t\t\t\tfs.unlinkSync(path.join(dir, `${oldHash}.tar.gz`));\n\t\t\t} catch (err) {\n\t\t\t\t// ignore\n\t\t\t}\n\t\t}\n\t}\n\n\tcached[repo.ref] = hash;\n\tfs.writeFileSync(\n\t\tpath.join(dir, 'map.json'),\n\t\tJSON.stringify(cached, null, '  ')\n\t);\n}\n"],"names":["rimrafSync","copydirSync"],"mappings":"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"}